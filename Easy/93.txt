You are given a list of time intervals N. 
Each interval has a start time S and an end time E. 
Two intervals overlap if they share any moment in time. 
Your task is to select the largest possible number of intervals 
such that no two of them overlap.

Input
- Line 1: an integer N — the number of intervals.
- Next N lines: two integers S and E — the start and end times of an interval.

Output
A single integer: the maximum number of non‑overlapping intervals you can choose.

Constraints
1 ≤ N ≤ 10^5
1 ≤ S < E ≤ 10^9

Example
Input
5
1 3
2 5
4 6
6 7
5 9

Output
3
 



-------Only see the solution after putting your efforts into it---------

//read input
const N = parseInt(readline());
let intervals = [];

for (let i = 0; i < N; i++) {
    const [S, E] = readline().split(' ').map(Number);
    intervals.push([S,E]);
}

intervals.sort((a,b)=> a[1] - b[1]); //sort on basis of end time

let count= 0;
let lastEnd = -1;

for(let [s,e] of intervals){
    if(s >= lastEnd) {
        count++;
        lastEnd = e;
    }
}


console.log(count);

