In this Clash, you will be given two lists of integers that are already sorted. 
You must merge those lists into a single sorted list. 
If both lists are empty print Empty. 

Input 
Line 1 : An integer n1 which is the length of the first list 
Line 2 : An integer n2 which is the length of the second list 
Next n1 lines : An integer in each line which is an element of L1 (the first list) 
Next n2 lines : An integer in each line which is an element of L2 (the second list) 

Output 
L : the sorted list of integers seperated by commas or Empty 

Constraints 
0<=n1<=50 
0<=n2<=50
All integers are between 0 and 1000. 

Example 
Input 
3 
3 
1
3 
5 
2 
4 
6 

Output 
1,2,3,4,5,6




-------Only see the solution after putting your efforts into it---------

//read input
const n1 = parseInt(readline());
const n2 = parseInt(readline());

let result = [];
//input first list
for(let i=0;i<n1;i++){
        const num = parseInt(readline());
        result.push(num);
}
//input second list
for(let i=0;i<n2;i++){
        const num = parseInt(readline());
        result.push(num);
}

result.sort((a,b)=> a-b);
if(result.length === 0) console.log("Empty");
else console.log(result.join(","));